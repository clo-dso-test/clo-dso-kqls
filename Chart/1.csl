//Table//LA//
let startDate = startofday(datetime_utc_to_local(now(), 'Asia/Seoul') - 28d); // 4주전 00:00:00(KST)부터
let endDate = startofday(datetime_utc_to_local(now(), 'Asia/Seoul')) - 1s; // 전일 23:59:59(KST)까지
// 1. 모든 구독 ID를 distinct로 가져옴
let allSubscriptions = SecureScores
| where MaxScore > 0
| distinct SecureScoresSubscriptionId;
// 2. 점수 데이터를 가져옴
let scores = SecureScores
| where MaxScore > 0
| extend localTime = datetime_utc_to_local(TimeGenerated, 'Asia/Seoul') // UTC -> KST 변환
| where localTime between (startDate .. endDate) // 로그 조회 시점 기준 4주전~ 전일까지 데이터 가져옴
| extend scopeScore = round(PercentageScore * 100, 0)
| extend DaysAgo = bin(datetime_diff('day', datetime_utc_to_local(now()-1d, 'Asia/Seoul'), localTime), 7)
| project SecureScoresSubscriptionId, scopeScore, DaysAgo, TimeGenerated
| summarize MaxTimeGenerated = max(TimeGenerated), arg_max(TimeGenerated, scopeScore) by SecureScoresSubscriptionId, DaysAgo;
// 3. DaysAgo가 0~21인 경우의 점수를 각각 가져오기
let CurrentWeek = scores
| where DaysAgo == 0
| project SecureScoresSubscriptionId, 0WeekScore = toint(scopeScore);
let LastWeek = scores
| where DaysAgo == 7
| project SecureScoresSubscriptionId, 1WeekScore = toint(scopeScore);
let TwoWeeksAgo = scores
| where DaysAgo == 14
| project SecureScoresSubscriptionId, 2WeekScore = toint(scopeScore);
let ThreeWeeksAgo = scores
| where DaysAgo == 21
| project SecureScoresSubscriptionId, 3WeekScore = toint(scopeScore);
// 4. 모든 구독 ID를 기준으로 점수 결합
allSubscriptions
| join kind=leftouter (CurrentWeek) on SecureScoresSubscriptionId
| join kind=leftouter (LastWeek) on SecureScoresSubscriptionId
| join kind=leftouter (TwoWeeksAgo) on SecureScoresSubscriptionId
| join kind=leftouter (ThreeWeeksAgo) on SecureScoresSubscriptionId
| extend CurrentScore = coalesce(0WeekScore, 1WeekScore, 2WeekScore, 3WeekScore) // 금주 점수
| extend LastWeekScore = coalesce(1WeekScore, 2WeekScore, 3WeekScore, 0WeekScore) // 전주 점수
| extend TwoWeeksScore = coalesce(2WeekScore, 3WeekScore, 1WeekScore, 0WeekScore) // 2주전 점수
| extend ThreeWeeksScore = coalesce(3WeekScore, 2WeekScore, 1WeekScore, 0WeekScore) // 3주전 점수
| project SecureScoresSubscriptionId, 
          OverallScore = pack_array(ThreeWeeksScore, TwoWeeksScore, LastWeekScore, CurrentScore) // 점수를 배열 형태로 묶기
| order by SecureScoresSubscriptionId asc
