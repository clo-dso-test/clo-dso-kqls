//Table//LA//
let startDate = startofday(datetime_utc_to_local(now(), 'Asia/Seoul') - 7d); // 1주전 00:00:00(KST)부터
let endDate = startofday(datetime_utc_to_local(now(), 'Asia/Seoul')) - 1s; // 전일까지 23:59:59(KST)까지
let TI_ip_count = SecurityAlert
    | extend localTime = datetime_utc_to_local(TimeGenerated, 'Asia/Seoul') // UTC -> KST 변환
    | where localTime between (startDate .. endDate) // 최근 7일 동안의 데이터 필터링
    | extend EntityArray = parse_json(Entities) // Entities 필드를 JSON 배열로 변환
    | mv-expand EntityArray // JSON 배열을 각 요소로 확장
    | extend
        EntityType = tostring(EntityArray.Type),
        IPAddress = tostring(EntityArray.Address) // Type과 Address 값 추출
    | where EntityType == "ip" // Type이 'ip'인 경우만 필터링
    | summarize Alerts = count() by IPAddress; // IP별로 발생한 경고 수 집계
TI_ip_count
| join kind=inner (
    ThreatIntelIndicators
| where ObservableValue matches regex @"^(\d{1,3}\.){3}\d{1,3}$"
| extend ThreatType = tostring(parse_json(tostring(Data.indicator_types))[0])
| project
    TI_IP_Address = ObservableValue,
    ThreatType
    )
    on $left.IPAddress == $right.TI_IP_Address // TI IP 주소와 경고 IP 주소를 매칭
| project TI_IP_Address, ThreatType, Alerts // 최종 컬럼 출력
| distinct TI_IP_Address, ThreatType, Alerts
| extend ip_location = geo_info_from_ip_address(TI_IP_Address).country
| where ThreatType != "WatchList"
| order by Alerts desc
| limit 5
| extend Rank=row_number()
| extend Virus_Total = strcat("https://www.virustotal.com/gui/ip-address/", TI_IP_Address) // VirusTotal 바로가기 url 추가
| project Rank, TI_IP_Address, ip_location, ThreatType, Alerts, Virus_Total
